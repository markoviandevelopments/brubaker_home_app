name: Build iOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    env:
      KEYCHAIN_PATH: build.keychain-db
      KEYCHAIN_PASSWORD: Pre$ton01
      P12_PASSWORD: Not$erp01  # Hardcoded P12 password - update if different

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze Dart code
        run: flutter analyze

      #- name: Run tests
      # run: flutter test

      - name: Set up keychain
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

      - name: Download certificate
        run: echo "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
dyDFWSYG3Zcfi4FemgQIDjqoHeqXe34CAggA" | base64 --decode > /tmp/apple_cert.p12  # Replace CERT_BASE64_PLACEHOLDER with your base64 string

      - name: Check decoded certificate file
        run: |
          ls -l /tmp/apple_cert.p12
          file /tmp/apple_cert.p12 || echo "File type check failed - may not be a valid PKCS12 file"

      - name: Import certificate
        run: security import /tmp/apple_cert.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        continue-on-error: false  # Fail if import fails

      - name: Download provisioning profile
        run: echo "MIIviwYJKoZIhvcNAQcCoIIvfDCCL3gCAQExCzAJBgUrDgMCGgUAMIIfmAYJKoZIhvcNAQcBoIIf
iQSCH4U8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8IURPQ1RZUEUgcGxp
c3QgUFVCTElDICItLy9BcHBsZS8vRFREIFBMSVNUIDEuMC8vRU4iICJodHRwOi8vd3d3LmFwcGxl
LmNvbS9EVERzL1Byb3BlcnR5TGlzdC0xLjAuZHRkIj4KPHBsaXN0IHZlcnNpb249IjEuMCI+Cjxk
aWN0PgoJPGtleT5BcHBJRE5hbWU8L2tleT4KCTxzdHJpbmc+QnJ1YmFrZXIgSG9tZSBBcHA8L3N0
cmluZz4KCTxrZXk+QXBwbGljYXRpb25JZGVudGlmaWVyUHJlZml4PC9rZXk+Cgk8YXJyYXk+Cgk8
c3RyaW5nPkQyOTZTNDZURkM8L3N0cmluZz4KCTwvYXJyYXk+Cgk8a2V5PkNyZWF0aW9uRGF0ZTwv
a2V5PgoJPGRhdGU+MjAyNS0wOC0yNFQxNjozMTowMVo8L2RhdGU+Cgk8a2V5PlBsYXRmb3JtPC9r
ZXk+Cgk8YXJyYXk+CgkJPHN0cmluZz5pT1M8L3N0cmluZz4KCQk8c3RyaW5nPnhyT1M8L3N0cmlu
Zz4KCQk8c3RyaW5nPnZpc2lvbk9TPC9zdHJpbmc+Cgk8L2FycmF5PgoJPGtleT5Jc1hjb2RlTWFu
YWdlZDwva2V5PgoJPGZhbHNlLz4KCTxrZXk+RGV2ZWxvcGVyQ2VydGlmaWNhdGVzPC9rZXk+Cgk8
YXJyYXk+CgkJPGRhdGE+TUlJRnVUQ0NCS0dnQXdJQkFnSVFkUFpTd3U2bE1BVVJJeUJ5MGFEVFdq
QU5CZ2txaGtpRzl3MEJBUXNGQURCMU1VUXdRZ1lEVlFRREREdEJjSEJzWlNCWGIzSnNaSGRwWkdV
Z1JHVjJaV3h2Y0dWeUlGSmxiR0YwYVc5dWN5QkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWww
ZVRFTE1Ba0dBMVVFQ3d3Q1J6TXhFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZC
QVlUQWxWVE1CNFhEVEkxTURneU5ERTJNVFV3TWxvWERUSTJNRGd5TkRFMk1UVXdNVm93Z1pReEdq
QVlCZ29Ka2lhSmsvSXNaQUVCREFwRU1qazJVelEyVkVaRE1Ub3dPQVlEVlFRRERERnBVR2h2Ym1V
Z1JHbHpkSEpwWW5WMGFXOXVPaUJYYVd4c2IyZ2dRbkoxWW1GclpYSWdLRVF5T1RaVE5EWlVSa01w
TVJNd0VRWURWUVFMREFwRU1qazJVelEyVkVaRE1SZ3dGZ1lEVlFRS0RBOVhhV3hzYjJnZ1FuSjFZ
bUZyWlhJeEN6QUpCZ05WQkFZVEFsVlRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1J
SUJDZ0tDQVFFQXVES1lld3oyOGh4VGxBbWNtZEpZU0szTUZwTGR3SlJESEppNUpGRTJiS3M0aHNY
VXRmaEhNSWsxa1RrRExCc1diVm01QXpUYmpTUlJ1Sk1RZ3VIbURTMGVYUmRMT3RiNklNMlJKVWxs
MzhSc1VveE96UnAvMDRtTzJUVmYwb1JLUzNNSE9CcmlRNXpYZHRYMTNVbzdGQ1BHMWlVcXJCTzhY
NE5ZTUJZcDM5OS9tcnRYdC92ZEkrS1cwRm16UVRrOGN5dDlZc1FheitsS0FQb002ZU92MGxUVUNi
ODlKSktlaGdHZE5LaW1KdFlzWGVJRk1WYkZhaW1Rdi92Q2NtTE1nR2VvR0k3emkzeW53TEZIc3NL
ZzRucVYycEltdWVpNlBYQjlKQWJjaVRNRWh3Rjl5MFpxczJYbjRFVTRjbEtmcVNjUmNMSUdnaUI2
TkhzRW1pZW9KUUlEQVFBQm80SUNJekNDQWg4d0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVH
REFXZ0JRSi9zQVZrUG12WkFxU0Vya21LR01NbCt5bnNqQndCZ2dyQmdFRkJRY0JBUVJrTUdJd0xR
WUlLd1lCQlFVSE1BS0dJV2gwZEhBNkx5OWpaWEowY3k1aGNIQnNaUzVqYjIwdmQzZGtjbWN6TG1S
bGNqQXhCZ2dyQmdFRkJRY3dBWVlsYUhSMGNEb3ZMMjlqYzNBdVlYQndiR1V1WTI5dEwyOWpjM0F3
TXkxM2QyUnlaek13TWpDQ0FSNEdBMVVkSUFTQ0FSVXdnZ0VSTUlJQkRRWUpLb1pJaHZkalpBVUJN
SUgvTUlIREJnZ3JCZ0VGQlFjQ0FqQ0J0Z3lCczFKbGJHbGhibU5sSUc5dUlIUm9hWE1nWTJWeWRH
bG1hV05oZEdVZ1lua2dZVzU1SUhCaGNuUjVJR0Z6YzNWdFpYTWdZV05qWlhCMFlXNWpaU0J2WmlC
MGFHVWdkR2hsYmlCaGNIQnNhV05oWW14bElITjBZVzVrWVhKa0lIUmxjbTF6SUdGdVpDQmpiMjVr
YVhScGIyNXpJRzltSUhWelpTd2dZMlZ5ZEdsbWFXTmhkR1VnY0c5c2FXTjVJR0Z1WkNCalpYSjBh
V1pwWTJGMGFXOXVJSEJ5WVdOMGFXTmxJSE4wWVhSbGJXVnVkSE11TURjR0NDc0dBUVVGQndJQkZp
dG9kSFJ3Y3pvdkwzZDNkeTVoY0hCc1pTNWpiMjB2WTJWeWRHbG1hV05oZEdWaGRYUm9iM0pwZEhr
dk1CWUdBMVVkSlFFQi93UU1NQW9HQ0NzR0FRVUZCd01ETUIwR0ExVWREZ1FXQkJUMTl4LzZiTWxV
OVFUV09sOThMUjREVlE2c3JqQU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUtLb1pJaHZkalpBWUJC
QUVCL3dRQ0JRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRUJ4aHI1OFBzQnhjSmVOdjFLb2Jv
anUwTzlWNjl3bnlQMHVIdVZUc2U2V0xoeGJmem9teDFLSFZsMFpxKzdVM3M0YXQyelFuSUF3ZGxM
VEtzRmVGSkgzRkxJdFZVQndOUkxuQXNYWmROekM3Zk1OTGtFQTlwV3dOS3oyUDhEMTVoYm5QMTZL
SWZESVhiV3dQWWN6NEhzaUZWc2RJQUFXT1d4QjdkSUJ4a2tPbmpTRllwZjZsYVJNSjhlOHArSVhJ
YWhlUmg2UkxVbDRHVFo3Y011cmlhZEtSNmpXaUt5QnNyUkRqMC9PdkxRM21LeVR1REt4U25WREZ4
RDVHaTcvSmZsd25nbmh0YjRoejZzRTNpNmNEdjdpY20zZ0p5Y0pEQVFhTTFmR24rNTgzT0F0U2Uv
M2t0akdFZjdJZWNiKzZwUk9JVzBGL1RJTGdxbDVpQjQ4c2tJPTwvZGF0YT4KCTwvYXJyYXk+CgoJ
PGtleT5ERVItRW5jb2RlZC1Qcm9maWxlPC9rZXk+Cgk8ZGF0YT5NSUlOUFFZSktvWklodmNOQVFj
Q29JSU5MakNDRFNvQ0FRRXhEekFOQmdsZ2hrZ0JaUU1FQWdFRkFEQ0NBdllHQ1NxR1NJYjNEUUVI
QWFDQ0F1Y0VnZ0xqTVlJQzN6QU1EQWRXWlhKemFXOXVBZ0VCTUEwTUNGQlFVVU5vWldOckFRRUFN
QkFNQ2xScGJXVlViMHhwZG1VQ0FnRnNNQk1NRGtseldHTnZaR1ZOWVc1aFoyVmtBUUVBTUJzTUNG
UmxZVzFPWVcxbERBOVhhV3hzYjJnZ1FuSjFZbUZyWlhJd0hRd01RM0psWVhScGIyNUVZWFJsRncw
eU5UQTRNalF4TmpNeE1ERmFNQjRNQ1VGd2NFbEVUbUZ0WlF3UlFuSjFZbUZyWlhJZ1NHOXRaU0JC
Y0hBd0hnd09WR1ZoYlVsa1pXNTBhV1pwWlhJd0RBd0tSREk1TmxNME5sUkdRekFmREE1RmVIQnBj
bUYwYVc5dVJHRjBaUmNOTWpZd09ESTBNVFl4TlRBeFdqQWdEQmRRY205bWFXeGxSR2x6ZEhKcFlu
VjBhVzl1Vkhsd1pRd0ZVMVJQVWtVd0lRd0lVR3hoZEdadmNtMHdGUXdEYVU5VERBUjRjazlUREFo
MmFYTnBiMjVQVXpBbERBUk9ZVzFsREIxQ2NuVmlZV3RsY2todmJXVkJjSEJmUVhCd1UzUnZjbVZm
ZGpFdU1EQXJEQnRCY0hCc2FXTmhkR2x2Ymtsa1pXNTBhV1pwWlhKUWNtVm1hWGd3REF3S1JESTVO
bE0wTmxSR1F6QXNEQVJWVlVsRURDUXpOVE01WldKbU5DMDNaR1F6TFRRM05tRXRZalJtTWkxaVlU
RmlOR0U0TnpJd05USXdPd3dWUkdWMlpXeHZjR1Z5UTJWeWRHbG1hV05oZEdWek1DSUVJQkNod21T
UmdDQmk0Ty9DbFpTd003dWQ4NkF6RUx3UVRNb1pMOUtaeUpDSE1JSDNEQXhGYm5ScGRHeGxiV1Z1
ZEhOd2dlWUNBUUd3Z2VBd1FRd1dZWEJ3YkdsallYUnBiMjR0YVdSbGJuUnBabWxsY2d3blJESTVO
bE0wTmxSR1F5NWpiMjB1WW5KMVltRnJaWEl1WW5KMVltRnJaWEpJYjIxbFlYQndNQmdNRTJKbGRH
RXRjbVZ3YjNKMGN5MWhZM1JwZG1VQkFmOHdNUXdqWTI5dExtRndjR3hsTG1SbGRtVnNiM0JsY2k1
MFpXRnRMV2xrWlc1MGFXWnBaWElNQ2tReU9UWlRORFpVUmtNd0V3d09aMlYwTFhSaGMyc3RZV3hz
YjNjQkFRQXdPUXdXYTJWNVkyaGhhVzR0WVdOalpYTnpMV2R5YjNWd2N6QWZEQXhFTWprMlV6UTJW
RVpETGlvTUQyTnZiUzVoY0hCc1pTNTBiMnRsYnFDQ0NEd3dnZ0pETUlJQnlhQURBZ0VDQWdndHhm
eUkwc1ZMbFRBS0JnZ3Foa2pPUFFRREF6Qm5NUnN3R1FZRFZRUUREQkpCY0hCc1pTQlNiMjkwSUVO
QklDMGdSek14SmpBa0JnTlZCQXNNSFVGd2NHeGxJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5
YVhSNU1STXdFUVlEVlFRS0RBcEJjSEJzWlNCSmJtTXVNUXN3Q1FZRFZRUUdFd0pWVXpBZUZ3MHhO
REEwTXpBeE9ERTVNRFphRncwek9UQTBNekF4T0RFNU1EWmFNR2N4R3pBWkJnTlZCQU1NRWtGd2NH
eGxJRkp2YjNRZ1EwRWdMU0JITXpFbU1DUUdBMVVFQ3d3ZFFYQndiR1VnUTJWeWRHbG1hV05oZEds
dmJpQkJkWFJvYjNKcGRIa3hFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlU
QWxWVE1IWXdFQVlIS29aSXpqMENBUVlGSzRFRUFDSURZZ0FFbU9rdlBVQnlwTzJUSW5LQkV4emRF
Slh4eGFOT2Nkd1VGdGtPNWFZRktuZGtlMTlPT05PN0hFUzFmL1VmdGpKaVhjbnBoRnRQTUU4Uldn
RDlXRmdNcGZVUExFMEhSeE4xMnBlWGwyOHhYTzByblhzZ085aTVWTmxlbWFRNlVRb3hvMEl3UURB
ZEJnTlZIUTRFRmdRVXU3RGVvVmd6aUpxa2lwbmV2cjNycjlyTEpLc3dEd1lEVlIwVEFRSC9CQVV3
QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQVFZd0NnWUlLb1pJemowRUF3TURhQUF3WlFJeEFJUHB3
Y1FXWGhwZE5Calo3ZS8wYkE0QVJrdTQzN0pHRWNVUC9lWjZqS0dtYTg3Q0E5U2M5WlBHZExocTM2
b2pGUUl3YldhS0VNclVEZFJQelkxRFByU0tZNlV6YnVOdDJoZTNaQi9JVXliNWlHSjBPUXNYVzh0
UnFBem9HQVBub3JJb01JSUM1akNDQW0yZ0F3SUJBZ0lJTXczdStMOU1hQzR3Q2dZSUtvWkl6ajBF
QXdNd1p6RWJNQmtHQTFVRUF3d1NRWEJ3YkdVZ1VtOXZkQ0JEUVNBdElFY3pNU1l3SkFZRFZRUUxE
QjFCY0hCc1pTQkRaWEowYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRFVE1CRUdBMVVFQ2d3S1FY
QndiR1VnU1c1akxqRUxNQWtHQTFVRUJoTUNWVk13SGhjTk1UY3dNakl5TWpJeU16SXlXaGNOTXpJ
d01qRTRNREF3TURBd1dqQnlNU1l3SkFZRFZRUUREQjFCY0hCc1pTQlRlWE4wWlcwZ1NXNTBaV2R5
WVhScGIyNGdRMEVnTkRFbU1DUUdBMVVFQ3d3ZFFYQndiR1VnUTJWeWRHbG1hV05oZEdsdmJpQkJk
WFJvYjNKcGRIa3hFekFSQmdOVkJBb01Da0Z3Y0d4bElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1G
a3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRUJtdWtWbTk5bnlmUnpqYU9raHRXelZR
MlpFckpsR2laK3NrZ2Z1TDFXQS9jNG1yckdVY3ZMdTg3cEFHMEFSTkVmRm9tcmFDY0tTV0s1ZVlH
YjA5OFdxT0I5ekNCOURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUI4R0ExVWRJd1FZTUJhQUZMdXcz
cUZZTTRpYXBJcVozcjY5NjYvYXl5U3JNRVlHQ0NzR0FRVUZCd0VCQkRvd09EQTJCZ2dyQmdFRkJR
Y3dBWVlxYUhSMGNEb3ZMMjlqYzNBdVlYQndiR1V1WTI5dEwyOWpjM0F3TXkxaGNIQnNaWEp2YjNS
allXY3pNRGNHQTFVZEh3UXdNQzR3TEtBcW9DaUdKbWgwZEhBNkx5OWpjbXd1WVhCd2JHVXVZMjl0
TDJGd2NHeGxjbTl2ZEdOaFp6TXVZM0pzTUIwR0ExVWREZ1FXQkJSNlI3bzRpaFVrU0NKR3piNlBH
aVI3TkFNcWFUQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VBWUtLb1pJaHZkalpBWUNFUVFDQlFBd0Nn
WUlLb1pJemowRUF3TURad0F3WkFJd0ZReXBqc2F2bG1scnA1L2RYTlFEV1d5dVV0Umd4b3QyNExm
Rm92RUpmT0NhNDJ1eDQzd3h4Q2Q2cDQ2Si9hdDNBakJoTXlEeEtmLzVoekt1S2Noa1BYWjdVYVRT
QWk5MnZtQWlrZkhWT25YY3RPTEdLcGIreGduY1NrL1ZKUEQ4eXJJd2dnTUhNSUlDcmFBREFnRUNB
Z2dYZ0tnMFptVHF5ekFLQmdncWhrak9QUVFEQWpCeU1TWXdKQVlEVlFRRERCMUJjSEJzWlNCVGVY
TjBaVzBnU1c1MFpXZHlZWFJwYjI0Z1EwRWdOREVtTUNRR0ExVUVDd3dkUVhCd2JHVWdRMlZ5ZEds
bWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhreEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFK
QmdOVkJBWVRBbFZUTUI0WERUSTBNVEV5TURBek1qQTBOVm9YRFRJNE1USXhOREU0TURBek1Gb3dU
akVxTUNnR0ExVUVBd3doVjFkRVVpQlFjbTkyYVhOcGIyNXBibWNnVUhKdlptbHNaU0JUYVdkdWFX
NW5NUk13RVFZRFZRUUtEQXBCY0hCc1pTQkpibU11TVFzd0NRWURWUVFHRXdKVlV6QlpNQk1HQnlx
R1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJQV1VXdzdCMUZRL0dkNUdZQ1ZmUG80cHoyeFBrOVVj
dDMyMlVsOGY0ZnRqQWJLQ0c2aWhUclRUN2U5V3VSZlVtTTFndDg1T3FiYzZWM1pUNkRORHIzMmpn
Z0ZQTUlJQlN6QU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIcEh1amlLRlNSSUlr
Yk52bzhhSkhzMEF5cHBNRUVHQ0NzR0FRVUZCd0VCQkRVd016QXhCZ2dyQmdFRkJRY3dBWVlsYUhS
MGNEb3ZMMjlqYzNBdVlYQndiR1V1WTI5dEwyOWpjM0F3TXkxaGMybGpZVFF3TXpDQmxnWURWUjBn
QklHT01JR0xNSUdJQmdrcWhraUc5Mk5rQlFFd2V6QjVCZ2dyQmdFRkJRY0NBakJ0REd0VWFHbHpJ
R05sY25ScFptbGpZWFJsSUdseklIUnZJR0psSUhWelpXUWdaWGhqYkhWemFYWmxiSGtnWm05eUlH
WjFibU4wYVc5dWN5QnBiblJsY201aGJDQjBieUJCY0hCc1pTQlFjbTlrZFdOMGN5QmhibVF2YjNJ
Z1FYQndiR1VnY0hKdlkyVnpjMlZ6TGpBZEJnTlZIUTRFRmdRVTZWTE9EYkRHaUJwbFNyaWJFWS94
M0I1SEZId3dEZ1lEVlIwUEFRSC9CQVFEQWdlQU1BOEdDU3FHU0liM1kyUU1Fd1FDQlFBd0NnWUlL
b1pJemowRUF3SURTQUF3UlFJaEFPK2F2RjJnV21ac1pMbk5ONU9wVTdRM3hjZHM0WVA2RnhyZUN6
M1dxMmhtQWlCNEk5bkRpQWRKUGZYN2lZK1FibGpnVjU5ai8xamgxbzljbUdQV09qNC9uVEdDQWRn
d2dnSFVBZ0VCTUg0d2NqRW1NQ1FHQTFVRUF3d2RRWEJ3YkdVZ1UzbHpkR1Z0SUVsdWRHVm5jbUYw
YVc5dUlFTkJJRFF4SmpBa0JnTlZCQXNNSFVGd2NHeGxJRU5sY25ScFptbGpZWFJwYjI0Z1FYVjBh
Rzl5YVhSNU1STXdFUVlEVlFRS0RBcEJjSEJzWlNCSmJtTXVNUXN3Q1FZRFZRUUdFd0pWVXdJSUY0
Q29OR1prNnNzd0RRWUpZSVpJQVdVREJBSUJCUUNnZ2Vrd0dBWUpLb1pJaHZjTkFRa0RNUXNHQ1Nx
R1NJYjNEUUVIQVRBY0Jna3Foa2lHOXcwQkNRVXhEeGNOTWpVd09ESTBNVFl6TVRBeVdqQXFCZ2tx
aGtpRzl3MEJDVFF4SFRBYk1BMEdDV0NHU0FGbEF3UUNBUVVBb1FvR0NDcUdTTTQ5QkFNQ01DOEdD
U3FHU0liM0RRRUpCREVpQkNDclFlek55VDA1K3dqYTJVbXpZaFlRM29OVEtZOHZrNktwK2pLYnpX
NHJ5ekJTQmdrcWhraUc5dzBCQ1E4eFJUQkRNQW9HQ0NxR1NJYjNEUU1ITUE0R0NDcUdTSWIzRFFN
Q0FnSUFnREFOQmdncWhraUc5dzBEQWdJQlFEQUhCZ1VyRGdNQ0J6QU5CZ2dxaGtpRzl3MERBZ0lC
S0RBS0JnZ3Foa2pPUFFRREFnUklNRVlDSVFEczJNaWp5OWh3ajArU1NXWGVobS9MT1NrRC93eEZZ
Q05vMVhYVVg4RGhYZ0loQU1ielVQNm1kdk1IbEQxM3RlN3gzekRPRml6V01ZRlpXUUdDRXUwQnpa
ZEc8L2RhdGE+CgkJCQkJCQkJCQkJCQoJCQk8a2V5PlBQUUNoZWNrPC9rZXk+Cgk8ZmFsc2UvPgoK
CTxrZXk+RW50aXRsZW1lbnRzPC9rZXk+Cgk8ZGljdD4KCQk8a2V5PmJldGEtcmVwb3J0cy1hY3Rp
dmU8L2tleT4KCQk8dHJ1ZS8+CgkJCQkKCQkJCTxrZXk+YXBwbGljYXRpb24taWRlbnRpZmllcjwv
a2V5PgoJCTxzdHJpbmc+RDI5NlM0NlRGQy5jb20uYnJ1YmFrZXIuYnJ1YmFrZXJIb21lYXBwPC9z
dHJpbmc+CgkJCQkKCQkJCTxrZXk+a2V5Y2hhaW4tYWNjZXNzLWdyb3Vwczwva2V5PgoJCTxhcnJh
eT4KCQkJCTxzdHJpbmc+RDI5NlM0NlRGQy4qPC9zdHJpbmc+CgkJCQk8c3RyaW5nPmNvbS5hcHBs
ZS50b2tlbjwvc3RyaW5nPgoJCTwvYXJyYXk+CgkJCQkKCQkJCTxrZXk+Z2V0LXRhc2stYWxsb3c8
L2tleT4KCQk8ZmFsc2UvPgoJCQkJCgkJCQk8a2V5PmNvbS5hcHBsZS5kZXZlbG9wZXIudGVhbS1p
ZGVudGlmaWVyPC9rZXk+CgkJPHN0cmluZz5EMjk2UzQ2VEZDPC9zdHJpbmc+CgkJCgk8L2RpY3Q+
Cgk8a2V5PkV4cGlyYXRpb25EYXRlPC9rZXk+Cgk8ZGF0ZT4yMDI2LTA4LTI0VDE2OjE1OjAxWjwv
ZGF0ZT4KCTxrZXk+TmFtZTwva2V5PgoJPHN0cmluZz5CcnViYWtlckhvbWVBcHBfQXBwU3RvcmVf
djEuMDwvc3RyaW5nPgoJPGtleT5UZWFtSWRlbnRpZmllcjwva2V5PgoJPGFycmF5PgoJCTxzdHJp
bmc+RDI5NlM0NlRGQzwvc3RyaW5nPgoJPC9hcnJheT4KCTxrZXk+VGVhbU5hbWU8L2tleT4KCTxz
dHJpbmc+V2lsbG9oIEJydWJha2VyPC9zdHJpbmc+Cgk8a2V5PlRpbWVUb0xpdmU8L2tleT4KCTxp
bnRlZ2VyPjM2NDwvaW50ZWdlcj4KCTxrZXk+VVVJRDwva2V5PgoJPHN0cmluZz4zNTM5ZWJmNC03
ZGQzLTQ3NmEtYjRmMi1iYTFiNGE4NzIwNTI8L3N0cmluZz4KCTxrZXk+VmVyc2lvbjwva2V5PgoJ
PGludGVnZXI+MTwvaW50ZWdlcj4KPC9kaWN0Pgo8L3BsaXN0PqCCDT8wggQ0MIIDHKADAgECAgg9
Wfg36tHYnzANBgkqhkiG9w0BAQsFADBzMS0wKwYDVQQDDCRBcHBsZSBpUGhvbmUgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYDVQQK
DApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yNDEyMTYxOTIxMDFaFw0yOTEyMTExODEzNTla
MFkxNTAzBgNVBAMMLEFwcGxlIGlQaG9uZSBPUyBQcm92aXNpb25pbmcgUHJvZmlsZSBTaWduaW5n
MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBANCTMav4Ux7frR4vZPfJTdeWvl9LPXlkXEPuKcNA0vovHKC2vBFz7/AisN/e+fnO
VeP1QgG1I2VBEjv3fEZ9iRNFlUTslpViZpeQAwDZ4K7F2bGcIC2W4IXtb2vTUtODPNQBIyXp5cbU
Edh5qgjC3RVY9e+Kk0sNS+4NtoeTdREQVcsMeAfbN3BGO5f6xOt4KeD07HjjYdpAV4AHu4icpcdJ
bcgm05UfTSGijWhzgx7mWVqFllVUsJUuJdx3DWGHgY2JpAN7PAB3LIlqWdNkRNl0pVuKsVJhX24E
MNTz4hA0DJWMS+F71iuFg/InOY1wCCPiFIj/k/QtbUwm4os3hi0CAwEAAaOB5TCB4jAMBgNVHRMB
Af8EAjAAMB8GA1UdIwQYMBaAFG/xlRhiXODI8cXtbBjJ4NNkUpggMEAGCCsGAQUFBwEBBDQwMjAw
BggrBgEFBQcwAYYkaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy1haXBjYTA3MC8GA1UdHwQo
MCYwJKAioCCGHmh0dHA6Ly9jcmwuYXBwbGUuY29tL2FpcGNhLmNybDAdBgNVHQ4EFgQUvLXF6b38
y9Ce3JSwHvghlFz/CS4wDgYDVR0PAQH/BAQDAgeAMA8GCSqGSIb3Y2QGOgQCBQAwDQYJKoZIhvcN
AQELBQADggEBADI0wul3ql/gxsqi83dZ54pnuPFR8/uw9pe/sRGj4aE8uyOS6RKTonEdvPGacW+k
PG82krbgR4Kik+PnuI+73yVEYgLPzbz3+42KCXB4ZcIZTSXLcmIh5Klo+RCaLnoPKL6mAwbRVWEf
r3z4lNRxDuLTJVSLzq3VaAdbvS17x2JFebmph0z4GDuArhBLcdh4K+YKr5rn2U3M6lu3o5dVa+wN
oHjHwLDPy9wQTDCSE3GU1q/g7MnpyZvOJTLuEQ0hFySL8ZUuImJGRX/g29cWVMG5PtPairll9rS0
I394XdlydmRjpwhVx9m3lNsjv/OTp9QEREMNyuJWsiuUKKQ9cocwggREMIIDLKADAgECAghcY8rk
SjdTyTANBgkqhkiG9w0BAQsFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEm
MCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJv
b3QgQ0EwHhcNMTcwNTEwMjEyNzMwWhcNMzAxMjMxMDAwMDAwWjBzMS0wKwYDVQQDDCRBcHBsZSBp
UGhvbmUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0
aG9yaXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAMlFagEPPoMEhsf8v9xe8B6B7hcwc2MmLt49eiTNkz5POUe6db7zwNLx
WaKrH/4KhjzZLZoH8g5ruSmRGl8iCovxclgFrkxLRMV5p4A8sIjgjAwnhF0Z5YcZNsvjxXa3sPRB
clH0BVyDS6JtplG48Sbfe16tZQzGsphRjLt9G0zBTsgIx9LtZAu03RuNT0B9G49IlpJb89CYftm8
pBkOmWG7QV0BzFt3en0k0NzTU//D3MWULLZaTY4YIzm92cZSPtHy9CWKoSqH/dgMRilR/+0XbIkl
a4e/imkUn3efwxW3aLOIRb2E5gYCQWQPrSoouBXJ4KynirpyBDSyeIz4soUCAwEAAaOB7DCB6TAP
BgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFCvQaUeUdgn+9GuNLkCm90dNfwheMEQGCCsGAQUF
BwEBBDgwNjA0BggrBgEFBQcwAYYoaHR0cDovL29jc3AuYXBwbGUuY29tL29jc3AwMy1hcHBsZXJv
b3RjYTAuBgNVHR8EJzAlMCOgIaAfhh1odHRwOi8vY3JsLmFwcGxlLmNvbS9yb290LmNybDAdBgNV
HQ4EFgQUb/GVGGJc4Mjxxe1sGMng02RSmCAwDgYDVR0PAQH/BAQDAgEGMBAGCiqGSIb3Y2QGAhIE
AgUAMA0GCSqGSIb3DQEBCwUAA4IBAQA6z6yYjb6SICEJrZXzsVwh+jYtVyBEdHNkkgizlqz3bZf6
WzQ4J88SRtM8EfAHyZmQsdHoEQml46VrbGMIP54l+tWZnEzm5c6Osk1o7Iuro6JPihEVPtwUKxzG
RLZvZ8VbT5UpLYdcP9yDHndP7dpUpy3nE4HBY8RUCxtLCmooIgjUN5J8f2coX689P7esWR04NGRa
7jNKGUJEKcTKGGvhwVMtLfRNwhX2MzIYePEmb4pN65RMo+j/D7MDi2Xa6y7YZVCf3J+K3zGohFTc
UlJB0rITHTFGR4hfPu7D8owjBJXrrIo+gmwGny7ji0OaYls0DfSZzyzuunKGGSOl/I61MIIEuzCC
A6OgAwIBAgIBAjANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUg
SW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFw
cGxlIFJvb3QgQ0EwHhcNMDYwNDI1MjE0MDM2WhcNMzUwMjA5MjE0MDM2WjBiMQswCQYDVQQGEwJV
UzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDkkakJH5HbHkdQ6wXtXnmELes2oldMVeyLGYne+Uts9QerIjAC6Bg++FAJ039BqJj50cpm
nCRrEdCju+QbKsMflZ56DKRHi1vUFjczy8QPTc4UadHJGXL1XQ7Vf1+b8iUDulWPTV0N8WQ1IxVL
FVkds5T39pyez1C6wVhQZ48ItCD3y6wsIG9wtj8BMIy3Q88PnT3zK0koGsj+zrW5DtleHNbLPbU6
rfQPDgCSC7EhFi501TwN22IWq6NxkkdTVcGvL0Gz+PvjcM3mo0xFfh9Ma1CWQYnEdGILEINBhzOK
gbEwWOxaBDKMaLOPHd5lc/9nXmW8Sdh2nzMUZaF3lMktAgMBAAGjggF6MIIBdjAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUK9BpR5R2Cf70a40uQKb3R01/CF4wHwYD
VR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wggERBgNVHSAEggEIMIIBBDCCAQAGCSqGSIb3
Y2QFATCB8jAqBggrBgEFBQcCARYeaHR0cHM6Ly93d3cuYXBwbGUuY29tL2FwcGxlY2EvMIHDBggr
BgEFBQcCAjCBthqBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFz
c3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFu
ZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9u
IHByYWN0aWNlIHN0YXRlbWVudHMuMA0GCSqGSIb3DQEBBQUAA4IBAQBcNplMLXi37Yyb3PN3m/J2
0ncwT8EfhYOFG5k9RzfyqZtAjizUsZAS2L70c5vu0mQPy3lPNNiiPvl4/2vIB+x9OYOLUyDTOMSx
v5pPCmv/K/xZpwUJfBdAVhEedNO3iyM7R6PVbyTi69G3cN8PReEnyvFteO3ntRcXqNx+IjXKJdXZ
D9Zr1KIkIxH3oayPc4FgxhtbCS+SsvhESPBgOJ4V9T0mZyCKM2r3DYLP3uujL/lTaltkwGMzd/c6
ByxW69oPIQ7aunMZT7XZNn/Bh1XZp5m5MkL72NVxnn6hUrcbvZNCJBIqxw8dtk2cXmPIS4AXUKqK
1drk/NAJBzewdXUhMYIChTCCAoECAQEwfzBzMS0wKwYDVQQDDCRBcHBsZSBpUGhvbmUgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkxIDAeBgNVBAsMF0NlcnRpZmljYXRpb24gQXV0aG9yaXR5MRMwEQYD
VQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUwIIPVn4N+rR2J8wCQYFKw4DAhoFAKCB3DAYBgkq
hkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0yNTA4MjQxNjMxMDJaMCMGCSqG
SIb3DQEJBDEWBBSnvnv+fnON9kt7nIqKtDN/tRhsnTApBgkqhkiG9w0BCTQxHDAaMAkGBSsOAwIa
BQChDQYJKoZIhvcNAQEBBQAwUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0D
AgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEB
BQAEggEAJQloejywNwyswEQTK37Nz7UdjkigULFFhic3Io3MoUpUu21Nfmz78jqcA+o4hyABshIR
rEAUneFh+oCG/m/bicjrjY5vxysq/YCkJpkpTGzJk3tl/Mo3V/8frZi/NfBVFhRxbyk2XcTSVN6w
q2ByD/XMBk8tXWIda2nTv06LpRXhwI9x6YYr5CKVzm7RTgumbqEbCjH27Gk8S5R+MW9fSvC+27TD
/uNINLIzggwkByTOjC70pHgPeOmYAFvoksM4VhcuyGMka3GtnC/mO5b601nXsReSwq8+H6P+CKWG
9O6vbMayhogk2QuWE59k6D/jgatJcgvvMYIFke0H0mOO0w==" | base64 --decode > /tmp/app.mobileprovision  # Replace PROFILE_BASE64_PLACEHOLDER with your base64 string

      - name: Check decoded provisioning profile
        run: |
          ls -l /tmp/app.mobileprovision
          file /tmp/app.mobileprovision || echo "File type check failed - may not be a valid mobileprovision file"

      - name: Extract provisioning profile details
        run: |
          security cms -D -i /tmp/app.mobileprovision > /tmp/decoded.plist
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /tmp/decoded.plist)
          TEAM_ID=$(/usr/libexec/PlistBuddy -c "Print :TeamID" /tmp/decoded.plist)
          PROFILE_SPECIFIER=$(/usr/libexec/PlistBuddy -c "Print :Name" /tmp/decoded.plist)
          echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV
          echo "TEAM_ID=$TEAM_ID" >> $GITHUB_ENV
          echo "PROFILE_SPECIFIER=$PROFILE_SPECIFIER" >> $GITHUB_ENV
          echo "Extracted PROFILE_UUID: $PROFILE_UUID"
          echo "Extracted TEAM_ID: $TEAM_ID"
          echo "Extracted PROFILE_SPECIFIER: $PROFILE_SPECIFIER"

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp /tmp/app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/${{ env.PROFILE_UUID }}.mobileprovision

      - name: Extract bundle ID
        run: |
          BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print :CFBundleIdentifier" ios/Runner/Info.plist)
          echo "BUNDLE_ID=$BUNDLE_ID" >> $GITHUB_ENV
          echo "Extracted BUNDLE_ID: $BUNDLE_ID"

      - name: Update Xcode project for manual signing
        run: |
          PROJECT_PATH="ios/Runner.xcodeproj/project.pbxproj"
          sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' $PROJECT_PATH
          sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "${{ env.TEAM_ID }}";/g' $PROJECT_PATH
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = "";/PROVISIONING_PROFILE_SPECIFIER = "${{ env.PROFILE_SPECIFIER }}";/g' $PROJECT_PATH
          sed -i '' 's/CODE_SIGN_IDENTITY = "";/CODE_SIGN_IDENTITY = "Apple Distribution";/g' $PROJECT_PATH
          sed -i '' 's/CODE_SIGN_IDENTITY\[sdk=iphoneos\*\] = "";/CODE_SIGN_IDENTITY\[sdk=iphoneos\*\] = "Apple Distribution";/g' $PROJECT_PATH

      - name: Create export options plist
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > exportOptions.plist
          echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> exportOptions.plist
          echo '<plist version="1.0">' >> exportOptions.plist
          echo '<dict>' >> exportOptions.plist
          echo '  <key>compileBitcode</key>' >> exportOptions.plist
          echo '  <false/>' >> exportOptions.plist
          echo '  <key>method</key>' >> exportOptions.plist
          echo '  <string>app-store</string>' >> exportOptions.plist
          echo '  <key>teamID</key>' >> exportOptions.plist
          echo "  <string>${{ env.TEAM_ID }}</string>" >> exportOptions.plist
          echo '  <key>provisioningProfiles</key>' >> exportOptions.plist
          echo '  <dict>' >> exportOptions.plist
          echo "    <key>${{ env.BUNDLE_ID }}</key>" >> exportOptions.plist
          echo "    <string>${{ env.PROFILE_SPECIFIER }}</string>" >> exportOptions.plist
          echo '  </dict>' >> exportOptions.plist
          echo '</dict>' >> exportOptions.plist
          echo '</plist>' >> exportOptions.plist
          cat exportOptions.plist  # Print for debugging

      - name: Build IPA
        run: flutter build ipa --release --export-options-plist=exportOptions.plist

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/ipa/*.ipa
          retention-days: 5  # Adjust as needed
